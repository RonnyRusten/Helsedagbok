<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAU
        FAAAAk1TRnQBSQFMAgEBBAEAASgBAAEoAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEgBgABIP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8AIgACVwFdAb8CKwGm
        Af8CKwGjAf8CKwGgAf8CKgGeAf8CKgGcAf8CKgGZAf8CKgGXAf8CKgGVAf8CKgGTAf8CKgGRAf8CKgGQ
        Af8CKgGOAf8CKgGNAf8CKgGNAf8CKgGNAf8CVwFdAb8CKwGmAf8CKwGjAf8CKwGgAf8CKgGeAf8CKgGc
        Af8CKgGZAf8CKgGXAf8CKgGVAf8CKgGTAf8CKgGRAf8CKgGQAf8CKgGOAf8CKgGNAf8CKgGNAf8CKgGN
        Af8CVwFdAb8CKwGmAf8CKwGjAf8CKwGgAf8CKgGeAf8CKgGcAf8CKgGZAf8CKgGXAf8CKgGVAf8CKgGT
        Af8CKgGRAf8CKgGQAf8CKgGOAf8CKgGNAf8CKgGNAf8CKgGNAf8CVwFdAb8CKwGmAf8CKwGjAf8CKwGg
        Af8CKgGeAf8CKgGcAf8CKgGZAf8CKgGXAf8CKgGVAf8CKgGTAf8CKgGRAf8CKgGQAf8CKgGOAf8CKgGN
        Af8CKgGNAf8CKgGNAf8CVwFeAb8CKwGqAf8CKwGnAf8CKwGkAf8CKwGiAf8CKwGfAf8CKgGdAf8CKgGb
        Af8CKgGYAf8CKgGWAf8CKgGUAf8CKgGSAf8CKgGRAf8CKgGPAf8CKgGOAf8CKgGNAf8CVwFeAb8CKwGq
        Af8CKwGnAf8CKwGkAf8CKwGiAf8CKwGfAf8CKgGdAf8CKgGbAf8CKgGYAf8CKgGWAf8CKgGUAf8CKgGS
        Af8CKgGRAf8CKgGPAf8CKgGOAf8CKgGNAf8CVwFeAb8CKwGqAf8CKwGnAf8CKwGkAf8CKwGiAf8CKwGf
        Af8CKgGdAf8CKgGbAf8CKgGYAf8CKgGWAf8CKgGUAf8CKgGSAf8CKgGRAf8CKgGPAf8CKgGOAf8CKgGN
        Af8CVwFeAb8CKwGqAf8CKwGnAf8CKwGkAf8CKwGiAf8CKwGfAf8CKgGdAf8CKgGbAf8CKgGYAf8CKgGW
        Af8CKgGUAf8CKgGSAf8CKgGRAf8CKgGPAf8CKgGOAf8CKgGNAf8CVwFeAb8CKwGuAf8CKwGrAf8CKwGo
        If8CKgGTAf8CKgGRAf8CKgGQAf8CKgGOAf8CVwFeAb8CKwGuAf8CKwGrAf8CKwGoAf8CKwGmAf8CKwGj
        Af8CKwGhAf8CKgGeAf8CKgGcAf8CKgGZAf8CKgGXAf8CKgGVAf8CKgGTAf8CKgGRAf8CKgGQAf8CKgGO
        Af8CVwFeAb8CKwGuAf8CKwGrAf8CKwGoAf8CKwGmAf8CKwGjAf8CKwGhAf8CoAHTAf8CrgHYAf8CRwGo
        Af8CKgGXAf8CKgGVAf8CKgGTAf8CKgGRAf8CKgGQAf8CKgGOAf8CVwFeAb8CKwGuAf8CKwGrAf8CRQGz
        Af8CKwGmAf8CKwGjAf8CKwGhAf8CKgGeAf8CKgGcAf8CKgGZAf8CKgGXAf8CKgGVAf8CKgGTAf8CKgGR
        Af8CKgGQAf8CKgGOAf8CVwFeAb8CLAGyAf8CKwGvAf8CKwGsCf8CKwGkCf8CKgGdCf8CKgGWAf8CKgGU
        Af8CKgGSAf8CKgGRAf8CVwFeAb8CLAGyAf8CKwGvAf8CKwGsAf8CKwGqAf8CKwGnHf8CKgGUAf8CKgGS
        Af8CKgGRAf8CVwFeAb8CLAGyAf8CKwGvAf8CKwGsAf8CKwGqAf8CKwGnAf8CKwGkCf8CrgHZAf8CKgGb
        Af8CKgGYAf8CKgGWAf8CKgGUAf8CKgGSAf8CKgGRAf8CVwFeAb8CLAGyAf8CKwGvAf8C/AH9Cf8C0wHr
        Af8CKwGiAf8CKwGfAf8CKgGdAf8CKgGbAf8CKgGYAf8CKgGWAf8CKgGUAf8CKgGSAf8CKgGRAf8CVwFe
        Ab8CLAG1Af8CLAGzAf8CKwGwCf8CKwGoCf8CKwGhCf8CKgGZAf8CKgGXAf8CKgGVAf8CKgGTAf8CVwFe
        Ab8CLAG1Af8CLAGzAf8CKwGwAf8CKwGuAf8CKwGrHf8CKgGXAf8CKgGVAf8CKgGTAf8CVwFeAb8CLAG1
        Af8CLAGzAf8CKwGwAf8CKwGuAf8CKwGrAf8CKwGoCf8CrwHaAf8CKgGeAf8CKgGcAf8CKgGZAf8CKgGX
        Af8CKgGVAf8CKgGTAf8CVwFeAb8CLAG1Af8CLAGzAf8CswHiCf8CpAHZAf8CKwGmAf8CKwGjAf8CKwGh
        Af8CKgGeAf8CKgGcAf8CKgGZAf8CKgGXAf8CKgGVAf8CKgGTAf8CVwFgAb8CLAG5Af8CLAG3Af8CLAG0
        Cf8CKwGsCf8CKwGkCf8CKgGdAf8CKgGbAf8CKgGYAf8CKgGWAf8CVwFgAb8CLAG5Af8CLAG3Cf8CNgGz
        Bf8C/AH9Af8CKwGnAf8CKwGkAf8CKwGiAf8CWQG1Bf8CKgGbAf8CKgGYAf8CKgGWAf8CVwFgAb8CLAG5
        Af8CLAG3Af8CLAG0Af8CLAGyAf8CKwGvAf8CKwGsCf8CrwHcAf8CKwGiAf8CKwGfAf8CKgGdAf8CKgGb
        Af8CKgGYAf8CKgGWAf8CVwFgAb8CLAG5Af8CLAG3Af8CRwG+Bf8CpQHcAf8CLAGtBf8C9wH7Af8CKwGk
        Af8CKwGiAf8CKwGfAf8CKgGdAf8CKgGbAf8CKgGYAf8CKgGWAf8CVwFgAb8CLAG9Af8CLAG7Af8CLAG4
        Cf8CKwGwCf8CKwGoCf8CKwGhAf8CKgGeAf8CKgGcAf8CKgGaAf8CVwFgAb8CLAG9Af8CLAG7Cf8CNAG2
        Hf8CKgGeAf8CKgGcAf8CKgGaAf8CVwFgAb8CLAG9Af8CLAG7Af8CjgHYAf8CnQHcAf8CnQHbAf8CnQHZ
        Cf8C6gH2Af8CqAHZAf8CpAHXAf8CowHVAf8CMQGhAf8CKgGcAf8CKgGaAf8CVwFgAb8CLAG9Af8CLAG7
        Af8CLAG4Af8CggHSAf8CLQGzDf8C9wH7Af8CKwGmAf8CKwGjAf8CKwGhAf8CKgGeAf8CKgGcAf8CKgGa
        Af8CVwFgAb8CLAHBAf8CLAG+Af8CLAG8Cf8CWQHFCf8CWQG+Cf8CKwGlAf8CKwGiAf8CKwGfAf8CKgGd
        Af8CVwFgAb8CLAHBAf8CLAG+Cf8CMgG5Bf8C/AH9Af8CKwGvAf8CKwGsAf8CKwGqAf8CWQG7Bf8CKwGi
        Af8CKwGfAf8CKgGdAf8CVwFgAb8CLAHBAf8CLAG+Kf8CdwHEAf8CKwGfAf8CKgGdAf8CVwFgAb8CLAHB
        Af8CLAG+Af8CLAG8Af8CLAG5Af8C6gH3Ef8C9wH8Af8CKwGnAf8CKwGlAf8CKwGiAf8CKwGfAf8CKgGd
        Af8CVwFgAb8CLQHFAf8CLAHCAf8CLAHAAf8C0QHwHf8CKwGoAf8CKwGmAf8CKwGjAf8CKwGhAf8CVwFg
        Ab8CLQHFAf8CLAHCCf8CMAG8Hf8CKwGmAf8CKwGjAf8CKwGhAf8CVwFgAb8CLQHFAf8CLAHCKf8CbwHD
        Af8CKwGjAf8CKwGhAf8CVwFgAb8CLQHFAf8CLAHCAf8CLAHAAf8CLAG9Af8CLAG7Af8C8wH7Ef8C9wH8
        Af8CKwGoAf8CKwGmAf8CKwGjAf8CKwGhAf8CVwFgAb8CLQHJAf8CLQHHAf8CLQHDAf8CLAHBAf8CLAG+
        Af8CLAG8Af8CLAG5Af8CLAG3Af8CLAG0Af8CLAGyAf8CKwGvAf8CKwGsAf8CKwGqAf8CKwGnAf8CKwGl
        Af8CVwFgAb8CLQHJAf8CLQHHCf8CLwG/Gf8CmgHXAf8CKwGqAf8CKwGnAf8CKwGlAf8CVwFgAb8CLQHJ
        Af8CLQHHAf8CLQHDAf8CLAHBAf8CLAG+Af8CLAG8Cf8CrwHiAf8CLAGyAf8CKwGvAf8CKwGsAf8CKwGq
        Af8CKwGnAf8CKwGlAf8CVwFgAb8CLQHJAf8CLQHHAf8CLQHDAf8CLAHBAf8CLAG+Af8CLAG8Af8C8wH7
        Ef8C9wH8Af8CKwGqAf8CKwGnAf8CKwGlAf8CVwFgAb8CLQHMAf8CLQHKKf8CKwGuAf8CKwGrAf8CKwGp
        Af8CVwFgAb8CLQHMAf8CLQHKCf8CMgHDAf8C5AH3Ef8CiAHTAf8CLAGwAf8CKwGuAf8CKwGrAf8CKwGp
        Af8CVwFgAb8CLQHMAf8CLQHKAf8CLQHIAf8CLQHFAf8CLAHCAf8CLAHACf8CrwHjAf8CLAG2Af8CLAGz
        Af8CLAGwAf8CKwGuAf8CKwGrAf8CKwGpAf8CVwFgAb8CLQHMAf8CLQHKAf8CLQHIAf8CLQHFAf8CLAHC
        Af8CLAHAAf8CLAG9Af8C8wH7Ef8ChwHQAf8CKwGrAf8CKwGpAf8CVwFgAb8CLQHOAf8CLQHNAf8C0QHz
        Jf8CLAGyAf8CKwGvAf8CKwGtAf8CVwFgAb8CLQHOAf8CLQHNCf8COAHKAf8CMgHFAf8CMQHCAf8CNgHC
        Af8CMwG+Af8CLAG6Af8CLAG3Af8CLAG0Af8CLAGyAf8CKwGvAf8CKwGtAf8CVwFgAb8CLQHOAf8CLQHN
        Af8CLQHLAf8CLQHJAf8CLQHHAf8CLQHDCf8CrwHlAf8CLAG6Af8CLAG3Af8CLAG0Af8CLAGyAf8CKwGv
        Af8CKwGtAf8CVwFgAb8CLQHOAf8CLQHNAf8CLQHLAf8CLQHJAf8CLQHHAf8CLQHDAf8CLAHBAf8CLAG+
        Af8C8wH7Df8CLwGzAf8CKwGvAf8CKwGtAf8CVwFgAb8CLQHQAf8CLQHPAf8CLQHNAf8CLQHMAf8C+gH9
        Af8CLQHIAf8CLQHFAf8CLQHCAf8CLAHAAf8C+gH9Af8CLAG7Af8CLAG4Af8CLAG2Af8CLAGzAf8CLAGx
        Af8CVwFgAb8CLQHQAf8CLQHPAf8C3AH2Ef8CwwHtAf8CLAHAAf8CLAG9Af8CLAG7Af8CLAG4Af8CLAG2
        Af8CLAGzAf8CLAGxAf8CVwFgAb8CLQHQAf8CLQHPAf8CLQHNAf8CLQHMAf8CLQHKAf8CLQHICf8CqgHl
        Af8CLAG9Af8CLAG7Af8CLAG4Af8CLAG2Af8CLAGzAf8CLAGxAf8CVwFgAb8CLQHQAf8CLQHPAf8CLQHN
        Af8CLQHMAf8CLQHKAf8CLQHIAf8CLQHFAf8CLQHCAf8CLAHAAf8C8wH7Bf8CawHOAf8CLAG2Af8CLAGz
        Af8CLAGxAf8CVwFgAb8CLQHRAf8CLQHRAf8CLQHPAf8CLQHOAf8CLQHNAf8C+gH9Df8CdQHXAf8CLAG+
        Af8CLAG8Af8CLAG6Af8CLAG3Af8CLAG0Af8CVwFgAb8CLQHRAf8CLQHRAf8CLQHPAf8CLQHOAf8CLQHN
        Af8CLQHLAf8CLQHJAf8CLQHHAf8CLQHDAf8CLAHBAf8CLAG+Af8CLAG8Af8CLAG6Af8CLAG3Af8CLAG0
        Af8CVwFgAb8CLQHRAf8CLQHRAf8CLQHPAf8CLQHOAf8CLQHNAf8CLQHLAf8CLQHJAf8CLQHHAf8CLQHD
        Af8CLAHBAf8CLAG+Af8CLAG8Af8CLAG6Af8CLAG3Af8CLAG0Af8CVwFgAb8CLQHRAf8CLQHRAf8CLQHP
        Af8CLQHOAf8CLQHNAf8CLQHLAf8CLQHJAf8CLQHHAf8CLQHDAf8CLAHBAf8CLAG+Af8CLAG8Af8CLAG6
        Af8CLAG3Af8CLAG0Af8CVwFgAb8CLQHRAf8CLQHRAf8CLQHRAf8CLQHQAf8CLQHPAf8CLQHNAf8CLQHM
        Af8CLQHKAf8CLQHIAf8CLQHFAf8CLQHCAf8CLAHAAf8CLAG9Af8CLAG7Af8CLAG4Af8CVwFgAb8CLQHR
        Af8CLQHRAf8CLQHRAf8CLQHQAf8CLQHPAf8CLQHNAf8CLQHMAf8CLQHKAf8CLQHIAf8CLQHFAf8CLQHC
        Af8CLAHAAf8CLAG9Af8CLAG7Af8CLAG4Af8CVwFgAb8CLQHRAf8CLQHRAf8CLQHRAf8CLQHQAf8CLQHP
        Af8CLQHNAf8CLQHMAf8CLQHKAf8CLQHIAf8CLQHFAf8CLQHCAf8CLAHAAf8CLAG9Af8CLAG7Af8CLAG4
        Af8CVwFgAb8CLQHRAf8CLQHRAf8CLQHRAf8CLQHQAf8CLQHPAf8CLQHNAf8CLQHMAf8CLQHKAf8CLQHI
        Af8CLQHFAf8CLQHCAf8CLAHAAf8CLAG9Af8CLAG7Af8CLAG4Af8CSwFMAY8CVwFgAb8CVwFgAb8CVwFg
        Ab8CVwFgAb8CVwFgAb8CVwFgAb8CVwFgAb8CVwFgAb8CVwFgAb8CVwFgAb8CVwFgAb8CVwFgAb8CVwFg
        Ab8CVwFgAb8CVwFgAb8CSwFMAY8CVwFgAb8CVwFgAb8CVwFgAb8CVwFgAb8CVwFgAb8CVwFgAb8CVwFg
        Ab8CVwFgAb8CVwFgAb8CVwFgAb8CVwFgAb8CVwFgAb8CVwFgAb8CVwFgAb8CVwFgAb8CSwFMAY8CVwFg
        Ab8CVwFgAb8CVwFgAb8CVwFgAb8CVwFgAb8CVwFgAb8CVwFgAb8CVwFgAb8CVwFgAb8CVwFgAb8CVwFg
        Ab8CVwFgAb8CVwFgAb8CVwFgAb8CVwFgAb8CSwFMAY8CVwFgAb8CVwFgAb8CVwFgAb8CVwFgAb8CVwFg
        Ab8CVwFgAb8CVwFgAb8CVwFgAb8CVwFgAb8CVwFgAb8CVwFgAb8CVwFgAb8CVwFgAb8CVwFgAb8CVwFg
        Ab8BQgFNAT4HAAE+AwABKAMAAUADAAEgAwABAQEAAQEGAAEBFgAD//8AAgAL
</value>
  </data>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>127, 17</value>
  </metadata>
</root>